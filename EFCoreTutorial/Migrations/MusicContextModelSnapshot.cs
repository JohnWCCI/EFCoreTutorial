// <auto-generated />
using System;
using EFCoreTutorial.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreTutorial.Migrations
{
    [DbContext(typeof(MusicContext))]
    partial class MusicContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreTutorial.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Johnny",
                            LastName = "Cash"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Jimmy",
                            LastName = "Buffet"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Home",
                            LastName = "Free"
                        });
                });

            modelBuilder.Entity("EFCoreTutorial.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            GenreName = "None"
                        },
                        new
                        {
                            Id = 1,
                            GenreName = "Rock and Roll"
                        },
                        new
                        {
                            Id = 2,
                            GenreName = "R&B"
                        },
                        new
                        {
                            Id = 3,
                            GenreName = "Country"
                        });
                });

            modelBuilder.Entity("EFCoreTutorial.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("GenreId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            GenreId = 0,
                            Title = "Your Heartless"
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 1,
                            GenreId = 0,
                            Title = "Ride Bikes"
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 1,
                            GenreId = 0,
                            Title = "Your Heartless"
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 1,
                            GenreId = 0,
                            Title = "Wayfaring Stranger"
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 2,
                            GenreId = 0,
                            Title = "Son of a Sailor"
                        },
                        new
                        {
                            Id = 6,
                            ArtistId = 3,
                            GenreId = 0,
                            Title = "Sea Shanty"
                        },
                        new
                        {
                            Id = 7,
                            ArtistId = 2,
                            GenreId = 0,
                            Title = "Island"
                        });
                });

            modelBuilder.Entity("EFCoreTutorial.Models.Genre", b =>
                {
                    b.HasOne("EFCoreTutorial.Models.Genre", null)
                        .WithMany("Genres")
                        .HasForeignKey("GenreId");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.Song", b =>
                {
                    b.HasOne("EFCoreTutorial.Models.Artist", "Artist")
                        .WithMany("Songs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreTutorial.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.Artist", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.Genre", b =>
                {
                    b.Navigation("Genres");
                });
#pragma warning restore 612, 618
        }
    }
}
